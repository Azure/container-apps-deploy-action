name: Run validation on action

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

env:
  TEST_FULL_ACR_NAME: ${{ vars.TEST_ACR_NAME }}.azurecr.io
  TEST_IMAGE_REPOSITORY: github-actions/container-app

jobs:
  use-builder:
    name: 'Validating builder scenarios'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      TEST_IMAGE_TAG: 'bs-${{ github.run_id }}'
      TEST_CONTAINER_APP_NAME: 'gh-ca-bs-${{ github.run_id }}'

    steps:
      - name: Checkout action repository
        uses: actions/checkout@v3

      - name: Clone Oryx repository
        uses: actions/checkout@v3
        with:
          repository: microsoft/Oryx
          path: oryx

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.TEST_AZURE_CREDENTIALS }}

      - name: Execute Azure Container Apps Build and Deploy Action
        uses: ./
        with:
          appSourcePath: '${{ github.workspace }}/oryx/tests/SampleApps/DotNetCore/NetCore6PreviewWebApp'
          acrName: ${{ vars.TEST_ACR_NAME }}
          acrUsername: ${{ secrets.TEST_REGISTRY_USERNAME }}
          acrPassword: ${{ secrets.TEST_REGISTRY_PASSWORD }}
          containerAppName: ${{ env.TEST_CONTAINER_APP_NAME }}
          resourceGroup: ${{ vars.TEST_RESOURCE_GROUP_NAME }}
          imageToBuild: ${{ env.TEST_FULL_ACR_NAME }}/${{ env.TEST_IMAGE_REPOSITORY }}:${{ env.TEST_IMAGE_TAG }}
          disableTelemetry: ${{ vars.TEST_DISABLE_TELEMETRY }}

      - name: Delete created Azure Container App
        if: ${{ always() }}
        shell: bash
        run: az containerapp delete --name ${{ env.TEST_CONTAINER_APP_NAME }} --resource-group ${{ vars.TEST_RESOURCE_GROUP_NAME }} --yes

      - name: Delete pushed image
        if: ${{ always() }}
        shell: bash
        run: az acr repository delete --name ${{ vars.TEST_ACR_NAME }} --image ${{ env.TEST_IMAGE_REPOSITORY }}:${{ env.TEST_IMAGE_TAG }} --yes

  use-dockerfile:
    name: 'Validating Dockerfile scenario'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      TEST_IMAGE_TAG: 'ds-${{ github.run_id }}'
      TEST_CONTAINER_APP_NAME: 'gh-ca-ds-${{ github.run_id }}'

    steps:
      - name: Checkout action repository
        uses: actions/checkout@v3

      - name: Clone Oryx repository
        uses: actions/checkout@v3
        with:
          repository: microsoft/Oryx
          path: oryx

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.TEST_AZURE_CREDENTIALS }}

      - name: Execute Azure Container Apps Build and Deploy Action
        uses: ./
        with:
          appSourcePath: '${{ github.workspace }}/oryx/tests/SampleApps/DotNetCore/Blazor_Function_Sample/blazor-sample-app'
          acrName: ${{ vars.TEST_ACR_NAME }}
          acrUsername: ${{ secrets.TEST_REGISTRY_USERNAME }}
          acrPassword: ${{ secrets.TEST_REGISTRY_PASSWORD }}
          containerAppName: ${{ env.TEST_CONTAINER_APP_NAME }}
          resourceGroup: ${{ vars.TEST_RESOURCE_GROUP_NAME }}
          imageToBuild: ${{ env.TEST_FULL_ACR_NAME }}/${{ env.TEST_IMAGE_REPOSITORY }}:${{ env.TEST_IMAGE_TAG }}
          disableTelemetry: ${{ vars.TEST_DISABLE_TELEMETRY }}

      - name: Delete created Azure Container App
        if: ${{ always() }}
        shell: bash
        run: az containerapp delete --name ${{ env.TEST_CONTAINER_APP_NAME }} --resource-group ${{ vars.TEST_RESOURCE_GROUP_NAME }} --yes

      - name: Delete pushed image
        if: ${{ always() }}
        shell: bash
        run: az acr repository delete --name ${{ vars.TEST_ACR_NAME }} --image ${{ env.TEST_IMAGE_REPOSITORY }}:${{ env.TEST_IMAGE_TAG }} --yes

  use-image:
    name: 'Validating image scenario'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      TEST_CONTAINER_APP_NAME: 'gh-ca-ds-${{ github.run_id }}'

    steps:
      - name: Checkout action repository
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.TEST_AZURE_CREDENTIALS }}

      - name: Execute Azure Container Apps Build and Deploy Action
        uses: ./
        with:
          imageToDeploy: 'mcr.microsoft.com/azuredocs/containerapps-helloworld:latest'
          containerAppName: ${{ env.TEST_CONTAINER_APP_NAME }}
          resourceGroup: ${{ vars.TEST_RESOURCE_GROUP_NAME }}
          disableTelemetry: ${{ vars.TEST_DISABLE_TELEMETRY }}

      - name: Delete created Azure Container App
        if: ${{ always() }}
        shell: bash
        run: az containerapp delete --name ${{ env.TEST_CONTAINER_APP_NAME }} --resource-group ${{ vars.TEST_RESOURCE_GROUP_NAME }} --yes
